1 -----------------------------------------------------------------
             OS/390 Rescue System Generation Macros
             Version 1.1
             09/25/97
  -----------------------------------------------------------------


  John Miller
  California State University, Office of the Chancellor
  jcmiller@calstate.edu

  PLEASE: Send me email on the inevitable bugs that you may find.




1 -----------------------------------------------------------------
                     I N T R O D U C T I O N
  -----------------------------------------------------------------
  This set of assembler macros is used to generate the JCL needed to
  create a one volume self contained IPL'able OS/390 system.  Such a
  system is invaluable for recovering from situations where the
  production system cannot IPL.

  Please note:  This documentation assumes that you have a decent
  knowlege of MVS or OS/390; not a real hot-shot, but that you
  basically know your way around.  This facility is NOT a "Push
  the button and out comes an IPL'able pack," but require that you check
  and customize some things, and maybe take a few tries getting the
  final product to IPL correctly.  It does however eliminate the vast
  majority out of the guess-work and trial and error of building a one
  pack system from scratch.

  Documentation:

  This member contains much of what you need to know about creating
  a one pack OS/390 system.  Be sure to read the macro source for more
  information on use of the various macros.

  Here's how to use this facility:

  1 - Check and/or Modify the XX prefixed members within the RESCUE PDS.
      These are PARMLIB members that will be copied over to the rescue
      system's SYS1.PARMLIB, VTAM parameters, and other stuff.
      (See summary of members below)

  2 - Build and submit the stage 1 JCL.  See sample member "STAGE1."
    - @JOBCARD macro coded;
    - @DATASET macros coded as required;
    - @COPY macros coded as required;
    - @TSTVOL macro coded last.
      (See @TSTVOL member for documentation on parms).

  3 - Submit the JCL created by step 1.  Release each job in order,
      and when the jobs have all finished with all steps return code 0,
      you should have an IPL'able system.  (Or close to it).

  4 - IPL and test the rescue system.  Vary all disk volumes offline
      except for RESCUE just to be extra sure that you aren't
      inadvertently pointing to some production piece of the OS on some
      other volume.


1 -----------------------------------------------------------------
           S U M M A R Y    O F   M E M B E R S
  -----------------------------------------------------------------
  COMMAND  - Assembler source to the COMMAND command, which is
  optionally used for issuing VARY commands, etc.  Uses RACF RACHECK
  validation to prevent unauthorized issuance of MVS commands.
  -----------------------------------------------------------------
  STAGE1   - Sample stage 1 JCL and macros.   good starting point.
  -----------------------------------------------------------------
  STAGE2   - Example stage 2 output.  DON'T run this sample member;
  you will want to generate your own, with your own modified Stage 1.
  -----------------------------------------------------------------
  WAIT     - Assembler source to the WAIT program, which is used
  (optionally) in the stage 2 JCL to time some of the activities.
  -----------------------------------------------------------------
  XATCCON  - VTAM Major nodes to be started automatically;
  -----------------------------------------------------------------
  XATCSTR  - VTAM startup parameters;
  -----------------------------------------------------------------
  XCOMMND  - Commands issued at IPL;
  -----------------------------------------------------------------
  XXIEASYS - Main parmlib member - shouldn't need much if any chg.
  -----------------------------------------------------------------
  XXIEFSSN - Subsystems.
  -----------------------------------------------------------------
  XXIKJTSO - TSO Auth commands.
  -----------------------------------------------------------------
  XXJESPRM - JES2 parms.  You'll probably be best off replacing
  this with a copy of your own JES2 parms, and changing the
  CKPTDEF and SPOOLDEF statements to point to the RESCUE volume.
  BE SURE YOU DO THIS!  Otherwise, when you IPL your rescue sys.,
  and cold start JES2, you will wipe out your production JES spool.
  This would be bad.  JES2 does tell you what volume is going to be
  cold started, and gives you a chance to back out, so pay attention
  when you do a cold start, and be sure JES2 is telling you that
  RESCUE is the volume being cold started.
  -----------------------------------------------------------------
  XXLOAD   - Specifies the master catalog name, IODF file suffix,
  nucleus suffix, and some other stuff.  See "OS/390 Initialization
  and Tuning" for more information.
                 +--------SYS1.IODFxx suffix.
                 V
        IODF     02 SYS1              01

        NUCLEUS  1  <-----Nucleus suffix
        SYSCAT   RESCUE113CCATALOG.RESCUE  <----Master catlg name

  Be sure that you have a @DATASET macro specified for the IODF
  file that you are using: SYS1.IODF02 would be the file for the
  above LOADxx member.
  -----------------------------------------------------------------
  XXSMFPRM - SMF parms.  Should be OK, use your own if you wish.
  -----------------------------------------------------------------
  XXVATLST - Specified RESCUE as STRG, which will allow temp.
  datasets such as ISPF temp files, etc. to be allocated.
  -----------------------------------------------------------------

1 -----------------------------------------------------------------
           S U M M A R Y    O F   M A C R O S
  -----------------------------------------------------------------
  The following macros are used in building a rescue system:

  - @JOBCARD - This macro reads in JCL job card statements that will be
    used as a model in generating each of the system generation jobs.
    The example JCL member "STAGE1" illustrates how to use this macro.

  - @DATASET - This macro is used to define user or other data sets that
    need to be recreated on the rescue system volume.  This macro is
    called within the stage 1 input (typically for locally defined
    datasets), and also called as an inner macro from within the @TSTVOL
    macro (for "vanilla" system datasets).

    The @DATASET macro accepts the following parameters:
    - Units (CYL, TRK or block value)
    - Primary allocation units.
    - Secondary allocation units.
    - Directory blocks (Must be 0 for non-pds)
    - Method to use in copying the dataset:
         C - IEBCOPY
         G - IEBGENER
         D - DFDSS
         N - Don't copy, allocate only.
    - Data set name
    - Optional space subparameters such as CONTIG, RLSE, etc.
    - Optional input volume for DFDSS INDYNAM parameter.
    - Optional usage parameters.  This parameter is used to specify
      additional processing for the dataset as follows:
         LNK     - Add to LNKLST00 parmlib member.
         LPA     - Add to LPALST00 parmlib member.
         APF     - Add to IEAAPF00 parmlib member.
         JES2    - JES2 PROCLIB to be added to JES2 startup PROC.
         VTAMLST - Add to VTAM startup PROC VTAMLST concatenation.
         VTAMLIB - Add to VTAM startup PROC VTAMLIB concatenation.
         ISPPLIB - Add to ISPPLIB concatenation in TSO PROC.
         ISPMLIB - Add to ISPMLIB concatenation in TSO PROC.
         ISPSLIB - Add to ISPSLIB concatenation in TSO PROC.
         ISPTLIB - Add to ISPTLIB concatenation in TSO PROC.
         SYSPROC - Add to SYSPROC concatenation in TSO PROC.

    The following macros would result in JCL being generated to perform
    an IEBCOPY of dataset 'SYS5.LINKLIB', and have the library placed
    in the APF list and Link list, and the RLSE parm coded in JCL:

         @DATASET CYL,0095,0035,150,C,SYS5.LINKLIB,RLSE,,(LNK,APF)
                        or
         @DATASET 23400,0190,0070,150,C,SYS5.LINKLIB,RLSE,,(APF,LNK)

  - @COPY - This macro specifies individual pds members that are to be
    copied in order to set up the ipl'able system.  See the verbiage
    within the macro itself in member @COPY for more detailed usage
    information.

  - @TSTVOL  - The main deal.  This macro performs the actual JCL
    generation process.  See the documentation within the macro for a
    description of the parameters that can be specified.  NOTE: The
    @JOBCARD macro as well as all @COPY and @DATASET macros must come
    BEFORE the @TSTVOL macro.

